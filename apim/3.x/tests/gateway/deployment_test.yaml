suite: Test API Gateway default deployment
templates:
  - "gateway/gateway-deployment.yaml"
  - "gateway/gateway-configmap.yaml"
tests:
  - it: Check default deployment
    template: gateway/gateway-deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: spec.template.spec.containers[0].image
          value: graviteeio/apim-gateway:3.15.2
      - isEmpty:
          # It should not contain environment variable by default
          path: spec.template.spec.containers[0].env
      - isEmpty:
          # It should not contain init containers by default
          path: spec.template.spec.initContainers

  - it: Check deployment with revisionHistoryLimit
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        deployment:
          revisionHistoryLimit: 5
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: spec.revisionHistoryLimit
          value: 5

  - it: Check deployment with JDBC support
    template: gateway/gateway-deployment.yaml
    set:
      management:
        type: "jdbc"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: graviteeio/apim-gateway:3.15.2
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].name
          value: graviteeio-apim-repository-jdbc-ext
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].mountPath
          value: /opt/graviteeio-gateway/plugins/ext/repository-jdbc

  - it: Set containerPort with custom port if core service is enabled
    template: gateway/gateway-deployment.yaml
    set:
      gateway:
        readinessProbe:
          apiSync: true
        services:
          core:
            http:
              enabled: true
              port: 20202
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - name: http
              containerPort: 8082
            - name: gateway-techapi
              containerPort: 20202
      - matchRegex:
          path: spec.template.spec.containers[0].ports[1].name
          # There is a k8s limitation that port names must be 15 characters or less
          pattern: ^.{0,15}$

