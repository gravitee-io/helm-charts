{{- if .Values.gateway.enabled -}}
apiVersion: apps/v1
kind: {{ .Values.gateway.type }}
metadata:
  name: {{ template "gravitee.gateway.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "gravitee.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ default .Chart.AppVersion .Values.gateway.image.tag }}
    app.kubernetes.io/component: "{{ .Values.gateway.name }}"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  {{- if eq .Values.gateway.type "StatefulSet" }}
  serviceName: {{ template "gravitee.gateway.fullname" . }}
  updateStrategy:
    type: RollingUpdate
  {{- end }}
  {{- if eq .Values.gateway.type "Deployment" }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  {{- end }}
  {{- if not .Values.gateway.autoscaling.enabled }}
  replicas: {{ .Values.gateway.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "gravitee.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "{{ .Values.gateway.name }}"
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "{{ .Values.chaos.enabled }}"
        {{- if .Values.gateway.reloadOnConfigChange }}
        checksum/config: {{ include (print $.Template.BasePath "/gateway/gateway-configmap.yaml") . | sha256sum }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ template "gravitee.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "{{ .Values.gateway.name }}"
    spec:
    {{- if .Values.gateway.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.gateway.nodeSelector | indent 8 }}
    {{- end }}
      {{- $plugins := list -}}
      {{- if .Values.gateway.additionalPlugins -}}
        {{- $plugins = concat $plugins .Values.gateway.additionalPlugins -}}
      {{- end -}}
    
      {{- if eq .Values.management.type "redis"  -}}
        {{- $url := printf "https://download.gravitee.io/graviteeio-apim/plugins/repositories/gravitee-repository-redis/gravitee-repository-redis-%s.zip"  (.Values.redis.repositoryVersion | default .Values.gateway.image.tag | default .Chart.AppVersion ) -}}
        {{- $plugins = append $plugins $url -}}
      {{- end -}}
    
      {{- $pluginParams := dict "plugins" $plugins "appName" "graviteeio-gateway" -}}
      {{- if or .Values.gateway.extraInitContainers $plugins .Values.jdbc.driver }}
      initContainers:
        {{- if and .Values.jdbc.driver (eq .Values.management.type "jdbc") }}
        - name: get-repository-jdbc-ext
          image: 'alpine'
          command: ['sh', '-c', "mkdir -p /tmp/plugins-ext && cd /tmp/plugins-ext && wget  {{ .Values.jdbc.driver }}"]
          securityContext:
{{ toYaml .Values.gateway.securityContext | trim | indent 12 }}
          volumeMounts:
            - name: graviteeio-apim-repository-jdbc-ext
              mountPath: /tmp/plugins-ext
        {{- end -}}
        {{- include "deployment.pluginInitContainers" $pluginParams | indent 8 }}
        {{- with .Values.gateway.extraInitContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.gateway.services.kubeController.enabled }}          
      serviceAccount: {{ .Values.gateway.services.kubeController.serviceAccount | default "default" }}
      serviceAccountName: {{ .Values.gateway.services.kubeController.serviceAccount | default "default" }}
      {{- end }}
      containers:
        - name: {{ template "gravitee.gateway.fullname" . }}
          image: "{{ .Values.gateway.image.repository }}:{{ default .Chart.AppVersion .Values.gateway.image.tag }}"
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          securityContext:  
{{ toYaml .Values.gateway.securityContext | trim | indent 12 }}
          ports:
            - name: {{ .Values.gateway.service.internalPortName }}
              containerPort: {{ .Values.gateway.service.internalPort }}
            {{- if .Values.gateway.services.bridge.enabled }}
            - name: {{ .Values.gateway.name }}-bridge
              containerPort: {{ .Values.gateway.services.bridge.service.internalPort }}
            {{- end }}
            {{- if and .Values.gateway.services.core.http.enabled (or .Values.gateway.services.kubeController.enabled .Values.gateway.readinessProbe.apiSync) }}
            - name: {{ .Values.gateway.name }}-hook
              containerPort: {{ .Values.gateway.services.core.http.port | default "18082" }}
            {{- end }}
          {{- if or .Values.gateway.env .Values.gateway.services.kubeController.enabled $plugins }}
          env:
            {{- if or $plugins }}
            - name: GRAVITEE_PLUGINS_PATH_0
              value: '${gravitee.home}/plugins'
            - name: GRAVITEE_PLUGINS_PATH_1
              value: '${gravitee.home}/plugins-ext'
            {{- end }}
            {{- range $env := .Values.gateway.env }}
            - name: {{ $env.name }}
              {{- if $env.value }}
              value: {{ $env.value | quote }}
              {{- end }}
              {{- with $env.valueFrom }}
              valueFrom: 
                {{- toYaml . | nindent 16 }}
              {{- end }}
            {{- end }}
            {{- if or .Values.gateway.services.kubeController.enabled }}
            - name: KUBERNETES_AUTH_TRYKUBECONFIG
              value: "false"
            - name: KUBERNETES_AUTH_TRYSERVICEACCOUNT
              value: "true"
            {{- end }}
          {{- end }}
          {{- if .Values.gateway.lifecycle }}
          lifecycle:
            {{- if .Values.gateway.lifecycle.postStart }}
            postStart:
              exec:
                command: {{ .Values.gateway.lifecycle.postStart }}
            {{- end }}
            {{- if .Values.gateway.lifecycle.preStop }}
            preStop:
              exec:
                command: {{ .Values.gateway.lifecycle.preStop }}
            {{- end }}
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.gateway.service.internalPort }}
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            {{- if eq .Values.gateway.readinessProbe.apiSync true }}
            httpGet:
              path: /_node/health?probes=api-sync
              port: {{ .Values.gateway.services.core.http.port | default 18082 }}
              {{- if eq .Values.gateway.services.core.http.secured true}}
              scheme: HTTPS
              {{- end }}
              {{- if eq .Values.gateway.services.core.http.authentication.type "basic" }}
              httpHeaders:
                - name: Authorization
                  value: {{ print "Basic "}}{{print "admin:" .Values.gateway.services.core.http.authentication.password | b64enc }}
              {{- end }}
            {{- else }}
            tcpSocket:
              port: {{ .Values.gateway.service.internalPort }}
            {{- end }}
            initialDelaySeconds: {{ .Values.gateway.readinessProbe.initialDelaySeconds | default 5 }}
            failureThreshold: {{ .Values.gateway.readinessProbe.failureThreshold | default 3 }}
            periodSeconds: 30
          resources:
{{ toYaml .Values.gateway.resources | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: /opt/graviteeio-gateway/config/gravitee.yml
              subPath: gravitee.yml
          {{- if .Values.gateway.logging.debug }}
            - name: config
              mountPath: /opt/graviteeio-gateway/config/logback.xml
              subPath: logback.xml
          {{- end }}
          {{- if and .Values.jdbc.driver (eq .Values.management.type "jdbc") }}
            - name: graviteeio-apim-repository-jdbc-ext
              mountPath: /opt/graviteeio-gateway/plugins/ext/repository-jdbc
          {{- end }}
          {{- include "deployment.pluginVolumeMounts" $pluginParams | indent 12 }}
          {{- with .Values.gateway.extraVolumeMounts }}
          {{- tpl . $ | nindent 12 }}
          {{- end }}
        {{- if .Values.gateway.extraContainers }}
        {{- with .Values.gateway.extraContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
        {{- end }}
      {{- if .Values.gateway.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.gateway.image.pullSecrets }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "gravitee.gateway.fullname" . }}
        {{- if and .Values.jdbc.driver (eq .Values.management.type "jdbc") }}
        - name: graviteeio-apim-repository-jdbc-ext
          emptyDir: {}
        {{- end }}
        {{- include "deployment.pluginVolumes" $pluginParams | indent 8 }}
        {{- with .Values.gateway.extraVolumes }}
          {{- tpl . $ | nindent 8 }}
        {{- end }}
{{- end -}}
