{{- if .Values.api.enabled -}}
{{- $initContainers := .Values.initContainers -}}
{{- $serviceAccount := include "apim.serviceAccount" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "gravitee.api.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "gravitee.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Values.api.image.tag | default .Chart.AppVersion | quote }}
    app.kubernetes.io/component: "{{ .Values.api.name }}"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    {{- if .Values.api.deployment.labels }}
    {{- range $key, $value := .Values.api.deployment.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- else }}
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
  {{- if .Values.api.deployment.annotations}}
  annotations:
    {{- range $key, $value := .Values.api.deployment.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  {{- if .Values.api.deployment.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.api.deployment.revisionHistoryLimit }}
  {{- end }}
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  strategy: {{ toYaml .Values.api.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "gravitee.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "{{ .Values.api.name }}"
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "{{ .Values.chaos.enabled }}"
        {{- if and (.Values.api.reloadOnConfigChange) (not (include "api.externalConfig" .)) }}
        checksum/config: {{ include (print $.Template.BasePath "/api/api-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- range $key, $value := .Values.api.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ template "gravitee.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ default .Chart.AppVersion .Values.api.image.tag | quote }}
        app.kubernetes.io/component: "{{ .Values.api.name }}"
        {{- if .Values.api.deployment.labels }}
        {{- range $key, $value := .Values.api.deployment.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- else }}
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- if $serviceAccount }}
      serviceAccountName: {{ $serviceAccount }}
      {{ end }}
      affinity: {{ toYaml .Values.api.deployment.affinity | nindent 8 }}
      nodeSelector: {{ toYaml .Values.api.deployment.nodeSelector | nindent 8 }}
      topologySpreadConstraints: {{ toYaml .Values.api.deployment.topologySpreadConstraints | nindent 8 }}
      tolerations: {{ toYaml .Values.api.deployment.tolerations | nindent 8 }}
      {{- if .Values.api.priorityClassName }}
      priorityClassName: {{ .Values.api.priorityClassName  }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.api.terminationGracePeriod }}
      {{- if .Values.api.deployment.hostAliases }}
      hostAliases: {{ toYaml .Values.api.deployment.hostAliases | nindent 6 }}
      {{- end }}

      {{- $plugins := list -}}
      {{- if .Values.api.additionalPlugins -}}
        {{- $plugins = concat $plugins .Values.api.additionalPlugins -}}
      {{- end -}}

      {{- $pluginParams := dict "plugins" $plugins "appName" "graviteeio-management-api" "pluginsToRemove" .Values.api.removePlugins "initContainers" $initContainers -}}
      {{- if or .Values.api.extraInitContainers $plugins .Values.jdbc.driver }}
      initContainers:
        {{- if and .Values.jdbc.driver (eq .Values.management.type "jdbc") }}
        - name: get-repository-jdbc-ext
          {{- toYaml .Values.initContainers | nindent 10 }}
          command: ['sh', '-c', "mkdir -p /tmp/plugins-ext && cd /tmp/plugins-ext && wget  {{ .Values.jdbc.driver }}"]
          volumeMounts:
            - name: graviteeio-apim-repository-jdbc-ext
              mountPath: /tmp/plugins-ext
        {{- end -}}
        {{- include "deployment.pluginInitContainers" $pluginParams | indent 8}}
        {{- with .Values.api.extraInitContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ template "gravitee.api.fullname" . }}
          image: "{{ .Values.api.image.repository }}:{{ default .Chart.AppVersion .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          securityContext: {{ toYaml ( .Values.api.securityContext | default .Values.api.deployment.securityContext ) | nindent 12 }}
          ports:
            - name: {{ .Values.api.service.internalPortName }}
              containerPort: {{ .Values.api.service.internalPort }}
            {{- if .Values.api.http.services.core.http.enabled }}
            - name: {{ printf "%s-%s" (.Values.api.name | trunc 7 | trimSuffix "-") "techapi" }}
              containerPort: {{ .Values.api.http.services.core.http.port | default "18083" }}
            {{- end }}
            {{- if .Values.api.services.bridge.enabled }}
            - name: {{ printf "%s-%s" (.Values.api.name | trunc 8 | trimSuffix "-") "bridge" }}
              containerPort: {{ .Values.api.services.bridge.service.internalPort }}
            {{- end }}
          env:
            {{- if $plugins }}
            - name: GRAVITEE_PLUGINS_PATH_0
              value: '${gravitee.home}/plugins'
            - name: GRAVITEE_PLUGINS_PATH_1
              value: '${gravitee.home}/plugins-ext'
            {{- end }}
            {{- if .Values.cockpit.enabled }}
            - name: gravitee_cockpit_enabled
              value: "true"
            - name: gravitee_cockpit_url
              value: {{ .Values.cockpit.url }}
            - name: gravitee_cockpit_ws_endpoints_0
              value: {{ .Values.cockpit.controller }}
            - name: gravitee_cockpit_keystore_type
              value: pkcs12
            - name: gravitee_cockpit_keystore_path
              value: /opt/graviteeio-management-api/cockpit/keystore.p12
            - name: gravitee_cockpit_keystore_password
              {{- toYaml .Values.cockpit.keystore.password | nindent 14}}
            {{- if .Values.cockpit.truststore }}
            - name: gravitee_cockpit_truststore_type
              value: pkcs12
            - name: gravitee_cockpit_truststore_path
              value: /opt/graviteeio-management-api/cockpit/truststore.p12
            - name: gravitee_cockpit_truststore_password
              {{- toYaml .Values.cockpit.truststore.password | nindent 14}}
            {{- end }}
            - name: gravitee_cockpit_ssl_verifyHostname
              value: "{{ .Values.cockpit.ssl.verifyHostname }}"
            {{- end }}
            {{- if .Values.gateway.enabled }}
            - name: portal.entrypoint
              value: "https://{{ index .Values.gateway.ingress.hosts 0 }}{{ .Values.gateway.ingress.path }}"
            {{- end }}
{{- if .Values.api.env | default .Values.api.deployment.extraEnvs }}
{{ toYaml ( .Values.api.env | default .Values.api.deployment.extraEnvs ) | indent 12 }}
{{- end }}
          envFrom: {{ toYaml .Values.api.deployment.envFrom | nindent 12 }}
          {{- if .Values.api.lifecycle }}
          lifecycle:
            {{- if .Values.api.lifecycle.postStart }}
            postStart:
              exec:
                command: {{ .Values.api.lifecycle.postStart }}
            {{- end }}
            {{- if .Values.api.lifecycle.preStop }}
            preStop:
              exec:
                command: {{ .Values.api.lifecycle.preStop }}
            {{- end }}
          {{- end }}
          livenessProbe: {{ toYaml .Values.api.livenessProbe | nindent 12 }}
          readinessProbe: {{ toYaml .Values.api.readinessProbe | nindent 12 }}
          {{- if and (.Values.api.startupProbe) (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
          startupProbe: {{ toYaml .Values.api.startupProbe | nindent 12 }}
          {{- end }}
          resources: {{ toYaml .Values.api.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /opt/graviteeio-management-api/config/gravitee.yml
              subPath: gravitee.yml
          {{- if .Values.api.logging.debug }}
            - name: config
              mountPath: /opt/graviteeio-management-api/config/logback.xml
              subPath: logback.xml
          {{- end }}
          {{- if and .Values.jdbc.driver (eq .Values.management.type "jdbc") }}
            - name: graviteeio-apim-repository-jdbc-ext
              mountPath: /opt/graviteeio-management-api/plugins/ext/repository-jdbc
          {{- end }}
          {{- if .Values.cockpit.enabled }}
            - name: gravitee-cockpit-certificates
              mountPath: /opt/graviteeio-management-api/cockpit
              readOnly: true
          {{- end }}
          {{- with .Values.license }}
          {{- if .key }}
            - name: licensekey
              mountPath: /opt/graviteeio-management-api/license
              readOnly: true
          {{- end }}
          {{- end }}
          {{- include "deployment.pluginVolumeMounts" $pluginParams | indent 12 }}
          {{- with .Values.api.extraVolumeMounts }}
          {{- tpl . $ | nindent 12 }}
          {{- end }}
        {{- if .Values.api.extraContainers }}
        {{- with .Values.api.extraContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
        {{- end }}
      {{- if .Values.api.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.api.image.pullSecrets }}
      {{- end }}
      volumes:
        {{- if not (include "api.externalConfig" .) }}
        - name: config
          configMap:
            name: {{ template "gravitee.api.fullname" . }}
        {{- end }}
        {{- if and .Values.jdbc.driver (eq .Values.management.type "jdbc") }}
        - name: graviteeio-apim-repository-jdbc-ext
          emptyDir: {}
        {{- end }}
        {{- if .Values.cockpit.enabled }}
        - name: gravitee-cockpit-certificates
          secret:
            secretName: {{ template "gravitee.api.fullname" . }}-cockpit-certificates
        {{- end }}
        {{- with .Values.license }}
        {{- if .key }}
        - name: licensekey
          secret:
            secretName: {{ .name }}
            items:
              - key: licensekey
                path: license.key
        {{- end }}
        {{- end }}
        {{- include "deployment.pluginVolumes" $pluginParams | indent 8 }}
        {{- with .Values.api.extraVolumes }}
          {{- tpl . $ | nindent 8 }}
        {{- end }}
{{- end -}}
