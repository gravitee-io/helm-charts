{{- if .Values.engine.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "gravitee.engine.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "gravitee.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: "{{ .Values.engine.name }}"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
data:
  gravitee.yml: |
    ingesters:
      ws:
    #    instances: 0
    #    port: 8072
    #    host: 0.0.0.0
    #    secured: false
    #    alpn: false
    #    ssl:
    #      clientAuth: false
    #      keystore:
    #        path: ${gravitee.home}/security/keystore.jks
    #        password: secret
    #      truststore:
    #        path: ${gravitee.home}/security/truststore.jks
    #        password: secret
        authentication: # authentication type to be used for HTTP authentication
          type: basic # none to disable authentication / basic for basic authentication
          users:
            admin: adminadmin

    services:
      core:
        http:
          port: 18072
          host: localhost
          authentication:
            # authentication type to be used for the core services
            # - none : to disable authentication
            # - basic : to use basic authentication
            # default is "basic"
            type: basic
            users:
              admin: adminadmin

    cluster:
      hazelcast:
        config:
          path: ${gravitee.home}/config/hazelcast.xml

  hazelcast.xml: |
    <?xml version="1.0" encoding="UTF-8"?>

    <hazelcast xmlns="http://www.hazelcast.com/schema/config"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.hazelcast.com/schema/config
              http://www.hazelcast.com/schema/config/hazelcast-config-3.12.xsd">
    
        <group>
            <name>dev</name>
            <password>dev-pass</password>
        </group>
        <management-center enabled="false">http://localhost:8080/hazelcast-mancenter</management-center>
        <network>
            <port auto-increment="true" port-count="100">5701</port>
            <outbound-ports>
                <!--
                Allowed port range when connecting to other nodes.
                0 or * means use system provided port.
                -->
                <ports>0</ports>
            </outbound-ports>
            <join>
                <multicast enabled="false">
                    <multicast-group>224.2.2.3</multicast-group>
                    <multicast-port>54327</multicast-port>
                </multicast>
                <tcp-ip enabled="true">
                    <interface>127.0.0.1</interface>
                </tcp-ip>
                <aws enabled="false">
                    <access-key>my-access-key</access-key>
                    <secret-key>my-secret-key</secret-key>
                    <!--optional, default is us-east-1 -->
                    <region>us-west-1</region>
                    <!--optional, default is ec2.amazonaws.com. If set, region shouldn't be set as it will override this property -->
                    <host-header>ec2.amazonaws.com</host-header>
                    <!-- optional, only instances belonging to this group will be discovered, default will try all running instances -->
                    <security-group-name>hazelcast-sg</security-group-name>
                    <tag-key>type</tag-key>
                    <tag-value>hz-nodes</tag-value>
                </aws>
            </join>
            <interfaces enabled="false">
                <interface>10.10.1.*</interface>
            </interfaces>
            <ssl enabled="false"/>
            <socket-interceptor enabled="false"/>
            <symmetric-encryption enabled="false">
                <!--
                  encryption algorithm such as
                  DES/ECB/PKCS5Padding,
                  PBEWithMD5AndDES,
                  AES/CBC/PKCS5Padding,
                  Blowfish,
                  DESede
                -->
                <algorithm>PBEWithMD5AndDES</algorithm>
                <!-- salt value to use when generating the secret key -->
                <salt>thesalt</salt>
                <!-- pass phrase to use when generating the secret key -->
                <password>thepass</password>
                <!-- iteration count to use when generating the secret key -->
                <iteration-count>19</iteration-count>
            </symmetric-encryption>
        </network>
        <partition-group enabled="false"/>
        <executor-service name="default">
            <pool-size>16</pool-size>
            <!--Queue capacity. 0 means Integer.MAX_VALUE.-->
            <queue-capacity>0</queue-capacity>
        </executor-service>
        <queue name="default">
            <!--
                Maximum size of the queue. When a JVM's local queue size reaches the maximum,
                all put/offer operations will get blocked until the queue size
                of the JVM goes down below the maximum.
                Any integer between 0 and Integer.MAX_VALUE. 0 means
                Integer.MAX_VALUE. Default is 0.
            -->
            <max-size>0</max-size>
            <!--
                Number of backups. If 1 is set as the backup-count for example,
                then all entries of the map will be copied to another JVM for
                fail-safety. 0 means no backup.
            -->
            <backup-count>1</backup-count>
    
            <!--
                Number of async backups. 0 means no backup.
            -->
            <async-backup-count>0</async-backup-count>
    
            <empty-queue-ttl>-1</empty-queue-ttl>
        </queue>
        <map name="default">
            <!--
              Data type that will be used for storing recordMap.
              Possible values:
              BINARY (default): keys and values will be stored as binary data
              OBJECT : values will be stored in their object forms
              NATIVE : values will be stored in non-heap region of JVM
            -->
            <in-memory-format>BINARY</in-memory-format>
    
            <!--
                Number of backups. If 1 is set as the backup-count for example,
                then all entries of the map will be copied to another JVM for
                fail-safety. 0 means no backup.
            -->
            <backup-count>1</backup-count>
            <!--
                Number of async backups. 0 means no backup.
            -->
            <async-backup-count>0</async-backup-count>
            <!--
                Maximum number of seconds for each entry to stay in the map. Entries that are
                older than <time-to-live-seconds> and not updated for <time-to-live-seconds>
                will get automatically evicted from the map.
                Any integer between 0 and Integer.MAX_VALUE. 0 means infinite. Default is 0
            -->
            <time-to-live-seconds>0</time-to-live-seconds>
            <!--
                Maximum number of seconds for each entry to stay idle in the map. Entries that are
                idle(not touched) for more than <max-idle-seconds> will get
                automatically evicted from the map. Entry is touched if get, put or containsKey is called.
                Any integer between 0 and Integer.MAX_VALUE. 0 means infinite. Default is 0.
            -->
            <max-idle-seconds>0</max-idle-seconds>
            <!--
                Valid values are:
                NONE (no eviction),
                LRU (Least Recently Used),
                LFU (Least Frequently Used).
                NONE is the default.
            -->
            <eviction-policy>NONE</eviction-policy>
            <!--
                Maximum size of the map. When max size is reached,
                map is evicted based on the policy defined.
                Any integer between 0 and Integer.MAX_VALUE. 0 means
                Integer.MAX_VALUE. Default is 0.
            -->
            <max-size policy="PER_NODE">0</max-size>
            <!--
                `eviction-percentage` property is deprecated and will be ignored when it is set.
                As of version 3.7, eviction mechanism changed.
                It uses a probabilistic algorithm based on sampling. Please see documentation for further details
            -->
            <eviction-percentage>25</eviction-percentage>
            <!--
                `min-eviction-check-millis` property is deprecated  and will be ignored when it is set.
                As of version 3.7, eviction mechanism changed.
                It uses a probabilistic algorithm based on sampling. Please see documentation for further details
            -->
            <min-eviction-check-millis>100</min-eviction-check-millis>
        </map>
    
        <multimap name="default">
            <backup-count>1</backup-count>
            <value-collection-type>SET</value-collection-type>
        </multimap>
    
        <replicatedmap name="default">
            <in-memory-format>OBJECT</in-memory-format>
            <async-fillup>true</async-fillup>
            <statistics-enabled>true</statistics-enabled>
        </replicatedmap>
    
        <list name="default">
            <backup-count>1</backup-count>
        </list>
    
        <set name="default">
            <backup-count>1</backup-count>
        </set>
    
        <jobtracker name="default">
            <max-thread-size>0</max-thread-size>
            <!-- Queue size 0 means number of partitions * 2 -->
            <queue-size>0</queue-size>
            <retry-count>0</retry-count>
            <chunk-size>1000</chunk-size>
            <communicate-stats>true</communicate-stats>
            <topology-changed-strategy>CANCEL_RUNNING_OPERATION</topology-changed-strategy>
        </jobtracker>
    
        <semaphore name="default">
            <initial-permits>0</initial-permits>
            <backup-count>1</backup-count>
            <async-backup-count>0</async-backup-count>
        </semaphore>
    
        <serialization>
            <portable-version>0</portable-version>
        </serialization>
    
        <services enable-defaults="true"/>
    </hazelcast>

  {{- if .Values.engine.logging.debug }}
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8"?>

    <!--
      ~ Copyright (c) 2015-2016, The Gravitee team (http://www.gravitee.io)
      ~
      ~  Licensed under the Apache License, Version 2.0 (the "License");
      ~  you may not use this file except in compliance with the License.
      ~  You may obtain a copy of the License at
      ~
      ~  http://www.apache.org/licenses/LICENSE-2.0
      ~
      ~  Unless required by applicable law or agreed to in writing, software
      ~  distributed under the License is distributed on an "AS IS" BASIS,
      ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      ~  See the License for the specific language governing permissions and
      ~  limitations under the License.
      -->

    <configuration>

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <!-- encoders are assigned the type
                ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
            <encoder>
                <pattern>{{ .Values.engine.logging.stdout.encoderPattern }}</pattern>
            </encoder>
        </appender>

        {{- if .Values.engine.logging.file.enabled }}
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${gravitee.home}/logs/gravitee.log</file>
{{ .Values.engine.logging.file.rollingPolicy | indent 16 }}
            <encoder>
                <pattern>{{ .Values.engine.logging.file.encoderPattern }}</pattern>
            </encoder>
        </appender>
        {{- end }}

        {{- if .Values.engine.logging.file.enabled }}
        <appender name="async-file" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="FILE" />
        </appender>
        {{- end }}

        <appender name="async-console" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="STDOUT" />
        </appender>

        <logger name="com.graviteesource" level="{{ .Values.engine.logging.graviteeLevel }}" />
        <logger name="org.reflections" level="WARN" />
        <logger name="org.springframework" level="WARN" />
        <logger name="com.hazelcast" level="WARN" />

        <!-- Strictly speaking, the level attribute is not necessary since -->
        <!-- the level of the root level is set to DEBUG by default.       -->
        <root level="INFO">
            <appender-ref ref="async-console" />
            {{- if .Values.engine.logging.file.enabled }}
            <appender-ref ref="async-file" />
            {{- end }}
        </root>

    </configuration>
  {{- end -}}
  {{- end -}}
