# Default values for Gravitee.io Alert Engine
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

chaos:
  enabled: false

engine:
  enabled: true
  type: Deployment
  name: engine
  logging:
    debug: false
    stdout:
      encoderPattern: "%d{HH:mm:ss.SSS} [%thread] [%X{api}] %-5level %logger{36} - %msg%n"
    file:
      enabled: true
      rollingPolicy: |
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>${gravitee.home}/logs/gravitee_%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
      encoderPattern: "%d{HH:mm:ss.SSS} [%thread] [%X{api}] %-5level %logger{36} - %msg%n"
    graviteeLevel: INFO
  reloadOnConfigChange: true

  # Whether this chart should self-manage its service account, role, and associated role binding.
  managedServiceAccount: true

  # Custom service account override that the pod will use
  serviceAccount: ""

  clusterRoleRules:
    - apiGroups:
        - ""
      resources:
        - endpoints
        - pods
        - nodes
        - services
        - configmaps
        - secrets
      verbs:
        - get
        - list
        - watch

  ssl:
    enabled: false
  #  keystore:
  #    path: ${gravitee.home}/security/keystore.jks
  #    password: secret
    clientAuth: false
  #  truststore:
  #    path: ${gravitee.home}/security/truststore.jks
  #    password: secret
  authentication:
    enabled: true
    adminPassword: adminadmin
  replicaCount: 1
  image:
    repository: graviteeio/ae-engine
    # tag: 1.0.0
    pullPolicy: Always
  # pullSecrets:
  #   - name: gravitee_secrets

  deployment:
    # Annotations to apply to the deployment
    annotations: {}
    # additionals labels
    labels: {}
    affinity: {}
    hostAliases: []
    #- ip: "127.0.0.1"
    #  hostnames:
    #  - "foo.local"
    #  - "bar.local"
    nodeSelector: {}
    tolerations: []
    envFrom: []
    # - configMapRef:
    #     name: config-secret
    securityContext:
      runAsUser: 1001
      runAsNonRoot: true
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
    topologySpreadConstraints: []
    # revisionHistoryLimit: 10

  # How long to wait for Alert Engine pods to stop gracefully
  terminationGracePeriod: 30

  # This is the PriorityClass settings as defined in
  # https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  priorityClassName: ""

  env:
    - name: "gravitee_processors_alertengineprocessoruseragent_enabled"
      value: "false"
    - name: "gravitee_processors_alertengineprocessorgeoip_enabled"
      value: "false"
  #   - name: ENV_VARIABLE
  #     value: ENV_VARIABLE_VALUE
  #   - name: ENV_VARIABLE_WITH_FROM
  #     valueFrom:
  #       configMapKeyRef:
  #         name: special-config
  #         key: SPECIAL_LEVEL
  
  service:
    type: ClusterIP
    externalPort: 82
    internalPort: 8072
    internalPortName: http
    # annotations:
  securityContext:
    runAsUser: 1001
    runAsNonRoot: true
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetAverageUtilization: 50
    targetMemoryAverageUtilization: 80
  ingress:
    enabled: true
    path: /
    ingressClassName: ""
    # Used to create an Ingress record.
    hosts:
      - ae.example.com
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
      kubernetes.io/app-root: /
      kubernetes.io/rewrite-target: /
      # ingress.kubernetes.io/configuration-snippet: "etag on;\nproxy_pass_header ETag;\nproxy_set_header if-match \"\";\n"
      # kubernetes.io/tls-acme: "true"
    #tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local
    tls:
      - hosts:
          - ae.example.com
        secretName: api-custom-cert
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
    #  lifecycle:
    #    postStart: '[ "/bin/sh", "-c", "echo Post starting Gravitee.io Alert Engine" ]'
    #    preStop: '[ "/bin/sh", "-c", "echo Pre stopping Gravitee.io Alert Engine" ]'
    ## Additional gravitee.io alert engine volume mounts
    # Defines additional volume mounts.
    # extraVolumeMounts: |
    # - name: extra-volume
    #   mountPath: /mnt/volume
    #   readOnly: true
    #   existingClaim: volume-claim

  livenessProbe:
    tcpSocket:
      port: http # Same as engine.service.internalPortName
    periodSeconds: 10
    failureThreshold: 5

  readinessProbe:
    tcpSocket:
      port: http # Same as engine.service.internalPortName
    periodSeconds: 5
    failureThreshold: 3

  startupProbe:
    tcpSocket:
      port: http # Same as engine.service.internalPortName
    initialDelaySeconds: 30
    periodSeconds: 5
    failureThreshold: 20

  pdb:
    enabled: false
    minAvailable: ""
    maxUnavailable: "50%"

  services:
    core:
      http:
        enabled: true
        port: 18072
        host: localhost
        authentication:
          type: basic
          password: adminadmin
      ingress:
        enabled: false
        ingressClassName: ""
#          path: /management/_(.*)
#          hosts:
#            - ae.example.com
#          annotations:
#            kubernetes.io/ingress.class: nginx
#            nginx.ingress.kubernetes.io/rewrite-target: /_$1
      service: 
#       If you choose to enable this service, you'll need to expose the technical api
#       on an accessible host outside of the pod: engine.http.services.core.http.host
        enabled: false
        externalPort: 72
#         type: ClusterIP

    metrics:
      enabled: false
      prometheus:
        enabled: true