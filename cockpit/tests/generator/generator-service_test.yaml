suite: Cockpit - Generator - service config
templates:
  - "generator/generator-service.yaml"
tests:
  - it: should generate nothing when api is disabled
    template: generator/generator-service.yaml
    set:
      generator:
        enabled: false
    release:
      name: my-cockpit
      namespace: unittest
    asserts:
      - hasDocuments:
          count: 0

  - it: should apply labels
    template: generator/generator-service.yaml
    release:
      name: my-cockpit
      namespace: unittest
    chart:
      version: 1.0.0-chart
      appVersion: 1.0.0-app
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: metadata.labels
          value:
            app.kubernetes.io/component: swagger-generator
            app.kubernetes.io/instance: my-cockpit
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: cockpit
            app.kubernetes.io/version: 1.0.0-app
            helm.sh/chart: cockpit-1.0.0-chart

  - it: should apply default service configuration
    template: generator/generator-service.yaml
    release:
      name: my-cockpit
      namespace: unittest
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: my-cockpit-swagger-generator
      - isEmpty:
          path: metadata.annotations
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports:
              - port: 84
                targetPort: generator-http
                protocol: TCP
                name: swagger-generator
                appProtocol: http
            selector:
              app.kubernetes.io/component: swagger-generator
              app.kubernetes.io/instance: my-cockpit
              app.kubernetes.io/name: cockpit

  - it: should apply default service configuration with custom appProtocol
    template: generator/generator-service.yaml
    set:
      generator:
        service:
          appProtocol: http-test
    release:
      name: my-cockpit
      namespace: unittest
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: my-cockpit-swagger-generator
      - isEmpty:
          path: metadata.annotations
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports:
              - port: 84
                targetPort: generator-http
                protocol: TCP
                appProtocol: http-test
                name: swagger-generator
            selector:
              app.kubernetes.io/component: swagger-generator
              app.kubernetes.io/instance: my-cockpit
              app.kubernetes.io/name: cockpit

  - it: Deploy with long generator name
    template: generator/generator-service.yaml
    set:
      generator:
        name: "I-am-a-very-long-name-Neque-porro-quisquam-est-qui-dolorem-ipsum-quia-dolor-sit"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.ports
          value: 
          - appProtocol: http
            name: I-am-a-very-long-name-Neque-porro-quisquam-est-qui-dolorem-ipsu
            port: 84
            protocol: TCP
            targetPort: generator-http